{"version":3,"file":"static/js/925.8ffc603d.chunk.js","mappings":"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","sources":["redux/actions/orderActions.js","views/base/cards/OrderCard.js","views/orders/list.js","views/orders/Orders.js"],"sourcesContent":["import requests from 'src/helpers/requests'\n\nexport const getOrders = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getOrders(params)\n    dispatch({ type: 'get_orders', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getOrderStatistic = () => async (dispatch) => {\n  try {\n    const response = await requests.getOrderStatistic()\n    dispatch({ type: 'get_order_statistic', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getStreamStatistic = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getStreamStatistic(params)\n    dispatch({ type: 'get_stream_order_statistic', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getOrderTotal = () => async (dispatch) => {\n  try {\n    const response = await requests.getOrderTotal()\n    dispatch({ type: 'get_stream_order_total', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst OrderCard = ({ card }) => {\n  return (\n    <div className=\"order-card\">\n      <div className=\"text-black\">{card?.product?.title_en}</div>\n      <div className=\"d-flex flex-md-nowrap flex-wrap gap-2 align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center gap-2\">\n          ID: <div className=\"bg-success text-white px-2 py-1 rounded\">#{card?.id}</div>\n        </div>\n        <div className=\"d-flex align-items-center text-end gap-2\">\n          Vaqti: <div className=\"text-black\">{card?.created_at}</div>\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center gap-2\">\n          Mijoz: <div className=\"text-black\">{card?.user?.first_name}</div>\n        </div>\n        {/* <div className=\"d-flex align-items-center gap-2\">\n          Tel: <div className=\"text-black\">{card?.user?.phone_number}</div>\n        </div> */}\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        {/* <div className=\"d-flex align-items-center gap-2\">\n          Operator: <div className=\"text-danger\">Operator olmagan</div>\n        </div> */}\n        <div className=\"d-flex align-items-center gap-2\">\n          Holati:{' '}\n          <div className=\"border border-primary rounded-pill text-primary py-1 px-2\">\n            {card?.status}\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center gap-2\">\n          Manzil: <div className=\"text-success\">{card?.province}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nOrderCard.propTypes = {\n  card: PropTypes.object,\n}\n\nexport default OrderCard\n","export const orderTabs = [\n  {\n    id: 1,\n    name: 'Yangi',\n    value: 'Yangi',\n  },\n  {\n    id: 2,\n    name: 'Qayta qo`ng`iroq',\n    value: 'qayta_qongiroq',\n  },\n  {\n    id: 3,\n    name: 'Dostavkaga tayyor',\n    value: 'dostavkaga_tayyor',\n  },\n  {\n    id: 4,\n    name: 'Yo`lda',\n    value: 'yolda',\n  },\n  {\n    id: 5,\n    name: 'Yetkazildi',\n    value: 'yetkazildi',\n  },\n  {\n    id: 6,\n    name: 'Qaytib keldi',\n    value: 'qaytib_keldi',\n  },\n  {\n    id: 7,\n    name: 'Arxiv',\n    value: 'arxiv',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useLocation } from 'react-router-dom'\nimport { getOrders } from 'src/redux/actions/orderActions'\nimport OrderCard from 'src/views/base/cards/OrderCard'\nimport { orderTabs } from './list'\n\nconst Streams = () => {\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const searchParams = new URLSearchParams(location.search)\n  const status = searchParams.get('status') || 'Yangi'\n  const page = parseInt(searchParams.get('page')) || 1\n  const limit = 15\n  const offset = (page - 1) * limit\n  const orders = useSelector((state) => state.order.orders?.data)\n  const totalOrders = orders?.count || 0\n  const pageCount = Math.ceil(totalOrders / limit)\n\n  const [params, setParams] = useState({\n    limit: limit,\n    offset: offset,\n    status: status,\n  })\n\n  useEffect(() => {\n    setParams({\n      status: status,\n      offset: 0,\n      limit: limit,\n    })\n  }, [status])\n\n  useEffect(() => {\n    setParams((prevParams) => ({\n      ...prevParams,\n      offset: (page - 1) * limit,\n    }))\n  }, [page])\n\n  useEffect(() => {\n    dispatch(getOrders(params))\n  }, [params, dispatch])\n\n  return (\n    <div>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <ul className=\"nav nav-pills nav-fill overflow-x-auto flex-nowrap\">\n            {orderTabs.map((item) => (\n              <li key={item.id} className=\"nav-item\">\n                <Link\n                  className={`nav-link ${status === item.value ? 'active' : ''}`}\n                  style={{ whiteSpace: 'nowrap' }}\n                  aria-current=\"page\"\n                  to={`?status=${item.value}&page=1`}\n                >\n                  {item.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"fw-bold fs-4 mb-3\">Buyurtmalar</div>\n          <div className=\"stream-cards\">\n            {orders?.results?.map((item, idx) => (\n              <OrderCard card={item} key={idx} />\n            ))}\n          </div>\n          {totalOrders > 0 && (\n            <nav aria-label=\"Page navigation example\">\n              <ul className=\"pagination justify-content-center mt-4\">\n                {pageCount > 0 &&\n                  [...Array(pageCount)].map((_, idx) => (\n                    <li key={idx} className=\"page-item\">\n                      <Link\n                        className={`page-link ${page === idx + 1 ? 'active' : ''}`}\n                        to={`?status=${status}&page=${idx + 1}`}\n                      >\n                        {idx + 1}\n                      </Link>\n                    </li>\n                  ))}\n              </ul>\n            </nav>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Streams\n"],"names":["getOrders","params","async","dispatch","type","payload","requests","err","console","log","getOrderStatistic","getStreamStatistic","getOrderTotal","_ref","_card$product","_card$user","card","_jsxs","className","children","_jsx","product","title_en","id","created_at","user","first_name","status","province","orderTabs","name","value","Streams","_orders$results","useDispatch","location","useLocation","searchParams","URLSearchParams","search","get","page","parseInt","offset","orders","useSelector","state","_state$order$orders","order","data","totalOrders","count","pageCount","Math","ceil","setParams","useState","limit","useEffect","prevParams","map","item","Link","concat","style","whiteSpace","to","results","idx","OrderCard","Array","_"],"sourceRoot":""}