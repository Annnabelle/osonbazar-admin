{"version":3,"file":"static/js/721.11bb4a0e.chunk.js","mappings":"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","sources":["helpers/token.js","views/pages/login/Login.js"],"sourcesContent":["export const setToken = (data) => {\n  localStorage.setItem('osonBazarAccessToken', data.token.access)\n}\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { IMaskInput } from 'react-imask'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\nimport { getProfile, postSignIn } from 'src/redux/actions/authActions'\nimport { toast } from 'react-toastify'\nimport { setToken } from 'src/helpers/token'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const phoneMask = '+998 (00) 000-00-00'\n  const Mask = [\n    {\n      mask: phoneMask,\n    },\n  ]\n  const [params, setParams] = useState({\n    phone_number: '',\n    password: '',\n  })\n\n  const formatPhoneNumber = (phone) => {\n    return phone.replace(/[^\\d+]/g, '')\n  }\n\n  const handleLogin = (e) => {\n    const { name, value } = e.target\n    setParams((prev) => {\n      return {\n        ...prev,\n        [name]: name === 'phone_number' ? formatPhoneNumber(value) : value,\n      }\n    })\n  }\n\n  const handleSubmit = async () => {\n    await postSignIn(params)\n      .then((response) => {\n        if (response?.data?.error) {\n          toast.error(response?.data?.error)\n        } else {\n          setToken(response.data)\n          dispatch(getProfile())\n          navigate('/dashboard')\n        }\n      })\n      .catch(({ response }) => {\n        if (response?.data)\n          for (const [key, value] of Object.entries(response?.data)) {\n            toast.error(`${key}: ${value}`)\n          }\n      })\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Akkauntingizga kiring</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <IMaskInput\n                        mask={Mask}\n                        pattern=\"[0-9]{2}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n                        maxLength={19}\n                        onChange={handleLogin}\n                        name=\"phone_number\"\n                        value={params.phone_number}\n                        required\n                        type=\"tel\"\n                        placeholder=\"Telefon raqamingiz\"\n                        className=\"form-control\"\n                        autoComplete=\"phone_number\"\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        onChange={handleLogin}\n                        value={params.password}\n                        name=\"password\"\n                        required\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CButton onClick={handleSubmit} color=\"primary\" className=\"px-4 mb-2\">\n                        Login\n                      </CButton>\n                      <CButton\n                        onClick={() => navigate('/register')}\n                        color=\"primary\"\n                        className=\"px-4\"\n                      >\n                        Ro`yhatdan o`tish\n                      </CButton>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\">\n                <CCardBody className=\"text-center\">\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\n                    <h2>OSONBAZAR</h2>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["setToken","data","localStorage","setItem","token","access","Login","dispatch","useDispatch","navigate","useNavigate","Mask","mask","params","setParams","useState","phone_number","password","handleLogin","e","name","value","target","prev","phone","replace","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","IMaskInput","pattern","maxLength","onChange","required","type","placeholder","autoComplete","cilLockLocked","CFormInput","CButton","onClick","async","postSignIn","then","response","_response$data","_response$data2","error","toast","getProfile","catch","_ref","key","Object","entries","concat","color"],"sourceRoot":""}