{"version":3,"file":"static/js/719.fb4a26e5.chunk.js","mappings":"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","sources":["helpers/index.js","redux/actions/orderActions.js","redux/actions/productActions.js","redux/actions/transactionActions.js","views/base/cards/TransactionCard.js","views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js","views/modal/PayAdminModal.js","redux/actions/payActions.js"],"sourcesContent":["export function numberWithCommas(x) {\n  let parts = x.toString().split('.')\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n  return parts.join(',')\n}\n","import requests from 'src/helpers/requests'\n\nexport const getOrders = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getOrders(params)\n    dispatch({ type: 'get_orders', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getOrderStatistic = () => async (dispatch) => {\n  try {\n    const response = await requests.getOrderStatistic()\n    dispatch({ type: 'get_order_statistic', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getStreamStatistic = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getStreamStatistic(params)\n    dispatch({ type: 'get_stream_order_statistic', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getOrderTotal = () => async (dispatch) => {\n  try {\n    const response = await requests.getOrderTotal()\n    dispatch({ type: 'get_stream_order_total', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import requests from 'src/helpers/requests'\n\nexport const getPopularProducts = () => async (dispatch) => {\n  try {\n    const response = await requests.getPopularProducts()\n    dispatch({ type: 'get_popular_products', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getMarketProducts = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getMarketProducts(params)\n    dispatch({ type: 'get_market_products', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const getStreamProducts = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getStreamProducts(params)\n    dispatch({ type: 'get_stream_products', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const createReferralLink = async (params) => {\n  try {\n    const response = await requests.createReferralLink(params)\n    return response\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const deleteReferralLink = async (id) => {\n  try {\n    const response = await requests.deleteReferralLink(id)\n    return response\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const editReferralLink = async (id, params) => {\n  try {\n    const response = await requests.editReferralLink(id, params)\n    return response\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const detailReferralLink = async (id) => {\n  try {\n    const response = await requests.detailReferralLink(id)\n    return response\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import requests from 'src/helpers/requests'\n\nexport const getTransactionAdmin = (params) => async (dispatch) => {\n  try {\n    const response = await requests.getTransactionAdmin(params)\n    dispatch({ type: 'get_transaction_admin', payload: response })\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TransactionCard = ({ card }) => {\n  const formattedData = card?.card?.replace(/(\\d{4})(\\d{4})(\\d{4})(\\d{4})/, '$1 $2 $3 $4')\n  return (\n    <div className=\"order-card\">\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center gap-2\">\n          Karta raqam:{' '}\n          <div className=\"bg-success text-white px-2 py-1 rounded\">{formattedData}</div>\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center gap-2\">\n          Summa: <div className=\"text-success\">{card?.amount?.toLocaleString('ru-RU')} UZS</div>\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center gap-2\">\n          Holati:{' '}\n          <div className=\"border border-primary rounded-pill text-primary py-1 px-2\">\n            {card?.status}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nTransactionCard.propTypes = {\n  card: PropTypes.object,\n}\n\nexport default TransactionCard\n","import React, { useEffect, useState } from 'react'\nimport { CRow, CCol, CWidgetStatsA } from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowTop } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderStatistic } from 'src/redux/actions/orderActions'\n\nconst WidgetsDropdown = () => {\n  const dispatch = useDispatch()\n  const orderStatisctics = useSelector((state) => state.order.orderStatisctics?.data)\n\n  useEffect(() => {\n    dispatch(getOrderStatistic())\n  }, [])\n\n  return (\n    <CRow>\n      {orderStatisctics?.map((item, idx) => (\n        <CCol key={idx} sm={6} lg={3}>\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"primary\"\n            value={\n              <>\n                {item?.count}{' '}\n                <span className=\"fs-6 fw-normal\">\n                  ({item?.percentage}% <CIcon icon={cilArrowTop} />)\n                </span>\n              </>\n            }\n            title={item?.status + ' buyurtmalar'}\n            chart={\n              <CChartLine\n                className=\"mt-3 mx-3\"\n                style={{ height: '70px' }}\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      label: 'My First dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointBackgroundColor: getStyle('--cui-primary'),\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                    },\n                  ],\n                }}\n                options={{\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  maintainAspectRatio: false,\n                  scales: {\n                    x: {\n                      grid: {\n                        display: false,\n                        drawBorder: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                    y: {\n                      min: 30,\n                      max: 89,\n                      display: false,\n                      grid: {\n                        display: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      borderWidth: 1,\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 4,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                    },\n                  },\n                }}\n              />\n            }\n          />\n        </CCol>\n      ))}\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React, { useEffect, useState } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport avatar from 'src/assets/images/avatars/avatar.png'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPopularProducts } from 'src/redux/actions/productActions'\nimport { getTransactionAdmin } from 'src/redux/actions/transactionActions'\nimport { numberWithCommas } from 'src/helpers'\nimport TransactionCard from '../base/cards/TransactionCard'\nimport PayAdminModal from '../modal/PayAdminModal'\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const popularProducts = useSelector((state) => state.product.popularProducts?.data)\n  const transactionAdmin = useSelector((state) => state.transaction.transactionAdmin?.data)\n  const user = useSelector((state) => state.auth.profile)\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => {\n    setShow(false)\n  }\n  const handleOpen = () => {\n    setShow(true)\n  }\n  const [loading, setLoading] = useState(false)\n  console.log(user)\n  useEffect(() => {\n    dispatch(getPopularProducts())\n    dispatch(getTransactionAdmin({ offset: 0, limit: 10 }))\n  }, [])\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"fs-5 mt-2 mb-2\">Arizalaringiz</div>\n          <div className=\"mb-3 fw-bold\">\n            Hisobingizdagi mablag`: {user?.wallet?.toLocaleString('ru-RU')} UZS\n          </div>\n          <CButton color=\"primary\" className=\"mb-4\" onClick={handleOpen}>\n            Mablag`ni yechish\n          </CButton>\n          <PayAdminModal show={show} handleClose={handleClose} />\n          <div className=\"stream-cards\">\n            {transactionAdmin?.results?.map((item, idx) => (\n              <TransactionCard card={item} key={idx} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <div className=\"fs-4 fw-bold mb-3\">Eng ko`p sotilgan mahsulotlar</div>\n              <div className=\"overflow-x-auto\">\n                <CTable\n                  align=\"middle\"\n                  className=\"mb-0 border\"\n                  style={{ minWidth: 'max-content' }}\n                  hover\n                  responsive\n                >\n                  <CTableHead color=\"light\">\n                    <CTableRow>\n                      <CTableHeaderCell>Mahsulot</CTableHeaderCell>\n                      <CTableHeaderCell>Narxi</CTableHeaderCell>\n                      <CTableHeaderCell>Soni</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {popularProducts?.map((item, idx) => (\n                      <CTableRow key={idx} style={{ cursor: 'pointer' }}>\n                        <CTableDataCell className=\"d-flex align-items-center gap-4 text-center\">\n                          <CAvatar\n                            size=\"md\"\n                            src={item?.front_image || avatar}\n                            style={{ minWidth: '40px' }}\n                          />\n                          <div className=\"text-start\">\n                            <CButton\n                              color=\"success\"\n                              style={{ fontSize: '13px', color: '#fff' }}\n                              className=\"p-1\"\n                            >\n                              Barchasi\n                            </CButton>\n                            <div className=\"\" style={{ fontSize: '13px' }}>\n                              {item?.title_en}\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <div>{numberWithCommas(item?.price)} so`m</div>\n                        </CTableDataCell>\n                        <CTableDataCell>{item?.count} dona sotilgan</CTableDataCell>\n                      </CTableRow>\n                    ))}\n                  </CTableBody>\n                </CTable>\n              </div>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { createPayAdmin } from 'src/redux/actions/payActions'\nimport { getTransactionAdmin } from 'src/redux/actions/transactionActions'\n\nconst PayAdminModal = ({ show, handleClose }) => {\n  const dispatch = useDispatch()\n  const [params, setParams] = useState({\n    card: '',\n    amount: null,\n  })\n\n  const clearState = () => {\n    setParams((prev) => ({ ...prev, card: '', amount: null }))\n  }\n\n  const handleSubmit = async () => {\n    await createPayAdmin(params)\n      .then(({ data }) => {\n        toast.success('Ariza yuborildi')\n        dispatch(getTransactionAdmin())\n        handleClose()\n        clearState()\n      })\n      .catch(({ response }) => {\n        if (response?.data)\n          for (const [key, value] of Object.entries(response?.data)) {\n            toast.error(`${key}: ${value}`)\n          }\n      })\n  }\n\n  return (\n    <div>\n      <CModal visible={show} onClose={handleClose}>\n        <CModalHeader onClose={handleClose}>\n          <CModalTitle>Ariza yaratish</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div>Karta raqam</div>\n          <input\n            onChange={(e) => setParams((prev) => ({ ...prev, card: e.target.value }))}\n            value={params.card}\n            type=\"text\"\n            className=\"form-control mb-2\"\n            placeholder=\"Karta raqam\"\n          />\n          <div>Summa</div>\n          <input\n            onChange={(e) => setParams((prev) => ({ ...prev, amount: +e.target.value }))}\n            value={params.amount}\n            type=\"number\"\n            className=\"form-control mb-2\"\n            placeholder=\"Summa\"\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={handleClose}>\n            Yopish\n          </CButton>\n          <CButton color=\"primary\" onClick={handleSubmit}>\n            Jo`natish\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nPayAdminModal.propTypes = {\n  show: PropTypes.bool,\n  handleShow: PropTypes.func,\n  handleClose: PropTypes.func,\n}\n\nexport default PayAdminModal\n","import $api from 'src/helpers/createApi'\nimport { formData } from 'src/helpers/requests'\n\nexport const createPayAdmin = async (params) => {\n  try {\n    const response = await $api.post('/user/create-application-admin/', formData(params))\n    return response\n  } catch (err) {\n    console.log(err)\n  }\n}\n"],"names":["numberWithCommas","x","parts","toString","split","replace","join","getOrders","params","async","dispatch","type","payload","requests","err","console","log","getOrderStatistic","getStreamStatistic","getOrderTotal","getPopularProducts","getMarketProducts","getStreamProducts","createReferralLink","deleteReferralLink","id","editReferralLink","detailReferralLink","getTransactionAdmin","_ref","_card$card","_card$amount","card","formattedData","_jsxs","className","children","_jsx","amount","toLocaleString","status","WidgetsDropdown","useDispatch","orderStatisctics","useSelector","state","_state$order$orderSta","order","data","useEffect","CRow","map","item","idx","CCol","sm","lg","CWidgetStatsA","color","value","_Fragment","count","percentage","CIcon","icon","cilArrowTop","title","chart","CChartLine","style","height","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","Dashboard","_user$wallet","_transactionAdmin$res","popularProducts","_state$product$popula","product","transactionAdmin","_state$transaction$tr","transaction","user","auth","profile","show","setShow","useState","loading","setLoading","offset","limit","wallet","CButton","onClick","handleOpen","PayAdminModal","handleClose","results","TransactionCard","xs","CCard","CCardBody","CTable","align","minWidth","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","cursor","CTableDataCell","CAvatar","size","src","front_image","avatar","fontSize","title_en","price","setParams","CModal","visible","onClose","CModalHeader","CModalTitle","CModalBody","onChange","e","prev","target","placeholder","CModalFooter","$api","post","formData","createPayAdmin","then","_ref2","toast","success","catch","_ref3","response","key","Object","entries","error","concat"],"sourceRoot":""}